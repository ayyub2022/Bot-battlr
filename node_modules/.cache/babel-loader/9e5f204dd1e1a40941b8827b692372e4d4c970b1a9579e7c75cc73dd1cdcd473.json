{"ast":null,"code":"var _jsxFileName = \"/home/ayub/Desktop/p2 Bot-battlr/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = ({\n  addToArmy\n}) => {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setBots(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const HandleAddToArmy = bot => {\n    addToArmy(bot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create your army!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.avatar_url,\n        alt: \"bot avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Name: \", bot.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Health: \", bot.health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Damage: \", bot.damage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Armor: \", bot.armor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bot class: \", bot.bot_class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Catchphrase: \", bot.catchphrase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => HandleAddToArmy(bot),\n        children: \"Enlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BotCollection","addToArmy","_s","bots","setBots","fetch","then","response","ok","Error","json","jsonData","catch","error","console","HandleAddToArmy","bot","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","src","avatar_url","alt","name","health","damage","armor","bot_class","catchphrase","onClick","id","_c","$RefreshReg$"],"sources":["/home/ayub/Desktop/p2 Bot-battlr/src/components/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst BotCollection = ({ addToArmy }) => {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((jsonData) => {\n        setBots(jsonData);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const HandleAddToArmy = (bot) => {\n    addToArmy(bot);\n  }\n\n  return (\n    <div>\n      <h2>Bot Collection</h2>\n      <h3>Create your army!</h3>\n      \n      {bots.map((bot) => (\n        <div key={bot.id} className='container'>\n         \n          \n            <img src={bot.avatar_url} alt=\"bot avatar\" />\n            <h3>Name: {bot.name}</h3>\n            <p>Health: {bot.health}</p>\n            <p>Damage: {bot.damage}</p>\n            <p>Armor: {bot.armor}</p>\n            <p>Bot class: {bot.bot_class}</p>\n            <p>Catchphrase: {bot.catchphrase}</p>\n            <button className= 'btn btn-success'onClick={() => HandleAddToArmy(bot)}>Enlist</button>\n        \n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default BotCollection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}